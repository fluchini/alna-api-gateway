version: "3.5"

services:
  apisix:
    image: apache/apisix:3.9.0-debian
    container_name: apisix
    restart: unless-stopped
    volumes:
      - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd
    ports:
      - "9180:9180/tcp"
      - "9080:9080/tcp"
      - "9091:9091/tcp"
      - "9443:9443/tcp"
      - "9092:9092/tcp"
    networks:
      apisix:

  apisix-dashboard:
    image: apache/apisix-dashboard:3.0.0-alpine
    container_name: apisix-dashboard
    restart: unless-stopped
    volumes:
      - ./apisix_dashboard_conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml:ro
    depends_on:
      - etcd
    ports:
      - "9000:9000/tcp"
    networks:
      - apisix

  etcd:
    image: bitnami/etcd:3.5.11
    container_name: etcd
    restart: unless-stopped
    volumes:
      - etcd_data:/bitnami/etcd
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    ports:
      - "2379:2379/tcp"
    networks:
      apisix:

  web1:
    image: nginx:1.19.0-alpine
    container_name: web1
    restart: unless-stopped
    volumes:
      - ./upstream/web1.conf:/etc/nginx/nginx.conf
#    ports:
#      - "9081:80/tcp"
    environment:
      - NGINX_PORT=80
    networks:
      apisix:

  web2:
    image: nginx:1.19.0-alpine
    container_name: web2
    restart: unless-stopped
    volumes:
      - ./upstream/web2.conf:/etc/nginx/nginx.conf
#    ports:
#      - "9082:80/tcp"
    environment:
      - NGINX_PORT=80
    networks:
      apisix:

  web3:
    image: kennethreitz/httpbin
    container_name: web3
    restart: unless-stopped
    networks:
      apisix:

  prometheus:
    image: prom/prometheus:v2.25.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus_conf/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      apisix:
#        ipv4_address: 172.16.238.31

  grafana:
    image: grafana/grafana:7.3.7
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - "./grafana_conf/provisioning:/etc/grafana/provisioning"
      - "./grafana_conf/dashboards:/var/lib/grafana/dashboards"
      - "./grafana_conf/config/grafana.ini:/etc/grafana/grafana.ini"
    networks:
      apisix:
#        ipv4_address: 172.16.238.40

##network_mode: host
networks:
  apisix:
    name: apisix
    driver: bridge
#    ipam:
#      driver: default
#      config:
#        - subnet: 172.16.238.0/24

volumes:
  etcd_data:
    driver: local
